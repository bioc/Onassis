% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllClasses.R, R/AllFunctions.R,
%   R/AllGenerics.R, R/CMoptions-methods.R
\docType{class}
\name{CMoptions-class}
\alias{CMoptions-class}
\alias{CMoptions}
\alias{listCombinations}
\alias{paramValueIndex}
\alias{paramValueIndex<-}
\alias{CMargs}
\alias{CMargs<-}
\alias{show,CMoptions-method}
\alias{listCombinations,CMoptions-method}
\alias{paramValueIndex,CMoptions-method}
\alias{paramValueIndex<-,CMoptions-method}
\alias{CMargs,CMoptions-method}
\alias{CMargs<-,CMoptions-method}
\title{CMoptions}
\usage{
CMoptions(index = NA)

listCombinations(x)

paramValueIndex(x)

paramValueIndex(x) <- value

CMargs(x)

CMargs(x) <- value

\S4method{show}{CMoptions}(object)

\S4method{listCombinations}{CMoptions}(x)

\S4method{paramValueIndex}{CMoptions}(x)

\S4method{paramValueIndex}{CMoptions}(x) <- value

\S4method{CMargs}{CMoptions}(x)

\S4method{CMargs}{CMoptions}(x) <- value
}
\arguments{
\item{index}{the paramValueIndex of the options}

\item{x}{CMoptions instance}

\item{value}{a list of arguments in the containing paramValueIndex (options), SearchStrategy, CaseMatch, Stemmer, Stopwords, OrderIndependentLookup, FindAllMatches and SynonymType parameters in the specified order.}

\item{object}{CMoptions instance}
}
\value{
list of possible options that one cas net to run the entity finder

the list of options

The data frame with all the possible parameter combinations

The paramValueIndex corresponding to the current options. If user has not changed the options this is set to 31

The updated CMoptions S4 object

List of parameters

The updated CMoptions S4 object
}
\description{
CMoptions is a class that represents Conceptmapper configurations. It allows users to show and set the possible combinations of different parameters for Conceptmapper running.

This function shows the list of possible combinations of options to run the entity finder

Method listCombinations

Method paramValueIndex

Method paramValueIndex<-

Method CMargs

Method CMargs<-

This method shows the list of options to run the Entity finder

This method retrieves all the possible parameter combination for Conceptmapper.
\describe{
\item{paramValueIndex}{An integer value to index the 576 parameter combinations}
\item{SearchStrategy}{The matching strategy for finding concepts in the input text}
\itemize{
\item{CONTIGUOUS_MATCH}{Longets match of contiguous tokens within enclosing span}
\item{SKIP_ANY_MATCH}{Longest match of not-necessarily contiguous tokens}
\item{SKIP_ANY_MATCH_ALLOW_OVERLAP}{Longest match of not-necessarily contiguous tokens, overlapping matches are allowed}
}
\item{CaseMatch}{}
\itemize{
\item{CASE_IGNORE}{Fold everything to lowercase for matching}
\item{CASE_INSENSITIVE}{Fold only tokens with initial caps to lowercase}
\item{CASE_FOLD_DIGITS}{Fold all (and only) tokens with a digit}
\item{CASE_SENSITIVE}{Perform no case folding}
}
\item{Stemmer}{}
\itemize{
\item BIOLEMMATIZER {A stemmer specific for biomedical literature}
\item PORTER {A stemmer that removes the commoner morphological and inflexional endings from words in English}
\item NONE {No word stemming}
}
\item{StopWords}{}
\itemize{
\item PUBMED {A list of stop words obtained analyzing Pubmed papers}
\item NONE {No stop words }
}
\item{OrderIndependentLookup}{}
\itemize{
\item ON {Ordering within span is ignored (i.e. 'Breast cancer' would equal 'Cancer breast') }
\item OFF {Ordering is taken into consideration}
}
\item{FindAllMatches}{}
\itemize{
\item YES {All the matches within the span are found }
\item NO {Only the longest match within the span will be returned}
}
\item{SynonymType}{}
\itemize{
\item EXACT_ONLY {Only exact synonyms are considered }
\item ALL {All synonym types are included}
}
}

This method retrieves the parameter combination index corresponding to a given parameter combination. The value of the paramValueIndex lays in the range [0:575]

This method sets the parameter combination for the given index. When the paramValueIndex is set to a given value the corresponding settings for the other parameters are automatically loaded.

This method retrieves the list of parameters currently set to run Conceptmapper

This method sets a list of parameters and updates the paramValueIndex to the correct value if necessary.
}
\details{
The following methods can be applied to CMoptions

\code{\link{paramValueIndex}} \cr
\code{\link{show}}  \cr
\code{\link{CMargs}} \cr
\code{\link{listCombinations}} \cr
}
\section{Slots}{

\describe{
\item{\code{arguments}}{The following argument can be set to run Conceptmapper
\describe{
\item{paramValueIndex}{An integer value to index the 576 parameter combinations}
\item{SearchStrategy}{The matching strategy for finding concepts in the input text}
\itemize{
\item{CONTIGUOUS_MATCH}{Longets match of contiguous tokens within enclosing span}
\item{SKIP_ANY_MATCH}{Longest match of not-necessarily contiguous tokens}
\item{SKIP_ANY_MATCH_ALLOW_OVERLAP}{Longest match of not-necessarily contiguous tokens, overlapping matches are allowed}
}
\item{CaseMatch}{}
\itemize{
\item{CASE_IGNORE}{Fold everything to lowercase for matching}
\item{CASE_INSENSITIVE}{Fold only tokens with initial caps to lowercase}
\item{CASE_FOLD_DIGITS}{Fold all (and only) tokens with a digit}
\item{CASE_SENSITIVE}{Perform no case folding}
}
\item{Stemmer}{}
\itemize{
\item BIOLEMMATIZER {A stemmer specific for biomedical literature}
\item PORTER {A stemmer that removes the commoner morphological and inflexional endings from words in English}
\item NONE {No word stemming}
}
\item{StopWords}{}
\itemize{
\item PUBMED {A list of stop words obtained analyzing Pubmed papers}
\item NONE {No stop words }
}
\item{OrderIndependentLookup}{}
\itemize{
\item ON {Ordering within span is ignored (i.e. 'Breast cancer' would equal 'Cancer breast') }
\item OFF {Ordering is taken into consideration}
}
\item{FindAllMatches}{}
\itemize{
\item YES {All the matches within the span are found }
\item NO {Only the longest match within the span will be returned}
}
\item{SynonymType}{}
\itemize{
\item EXACT_ONLY {Only exact synonyms are considered }
\item ALL {All synonym types are included}
}
}}
}}

\examples{
options <- new('CMoptions')
op <- CMoptions(40)
opt <- new('CMoptions')
show(opt)
opts <- new('CMoptions')
listCombinations(opts)
opts <- new('CMoptions')
paramValueIndex(opts)

opts <- new('CMoptions')
list_opts <- listCombinations(opts)

paramValueIndex(opts) <- 2
opts <- new('CMoptions')
CMargs(opts)
opts <- new('CMoptions')
list_opts <- listCombinations(opts)
CMargs(opts) <- as.list(c('1', 'CONTIGUOUS_MATCH', 'CASE_IGNORE',
 'BIOLEMMATIZER', 'NONE', 'OFF', 'YES', 'EXACT_ONLY'))
}
