% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllClasses.R, R/AllFunctions.R,
%   R/AllGenerics.R, R/CMdict-methods.R
\docType{class}
\name{CMdictionary-class}
\alias{CMdictionary-class}
\alias{CMdictionary}
\alias{dictTypes}
\alias{dictInfo}
\alias{buildDictionary}
\alias{buildDictionary,CMdictionary-method}
\alias{buildDictionary,}
\alias{CMdictionary-method}
\alias{dictTypes,CMdictionary-method}
\alias{dictTypes,}
\alias{CMdictionary-method}
\alias{dictInfo,CMdictionary-method}
\alias{dictInfo,}
\alias{CMdictionary-method}
\title{CMdictionary class that stores a Conceptmapper dictionary}
\usage{
CMdictionary(inputFileOrDb = NULL, dictType = "OBO", outputdir = getwd(),
  synonymType = "ALL", taxID = 0)

dictTypes(.Object)

dictInfo(.Object)

buildDictionary(.Object, outputDir = tempdir(), dictType = "OBO",
  synonymType = "EXACT", inputFileOrDb = NULL, taxID = 0)

\S4method{buildDictionary}{CMdictionary}(.Object, outputDir = tempdir(),
  dictType = "OBO", synonymType = "EXACT", inputFileOrDb = NULL,
  taxID = 0)

\S4method{dictTypes}{CMdictionary}(.Object)

\S4method{dictInfo}{CMdictionary}(.Object)
}
\arguments{
\item{inputFileOrDb}{The local OBO/OWL ontology to be converted into an XML Conceptmapper dictionary. If NA is passed and the \code{dicType} parameter is not the generic OBO then the method tries to download the corresponding dictionary from the available repositories. For ENTREZ and TARGET dictionary types a file named gene_info.gz is automatically downloaded from \url{ftp://ncbi.nlm.nih.gov/gene/data/gene_info.gz} if not provided by the user. Alternatively an annotation package of the type Org.xx.eg.db from Bioconductor can be used. In this case the gene ids and their alternative identifiers will be retrieved from the annotation database without the need of downloading a gene_info file.}

\item{dictType}{the type of input dictionary
\describe{
\item{OBO}{A dictionary that has been created by An OBO file}
\item{ENTREZ}{Entrez genes dictionary}
\item{TARGET}{Entrez genes dictionary, Histone marks and Histone modifications}
\item{CMDICT}{A previously created dictionary file in the Conceptmapper XML format}
}}

\item{outputdir}{the directory where the XML conceptmapper dictionary will be stored. Defaults to the tmp system's directory}

\item{synonymType}{The type of synonyms to consider when building the dictionary for Conceptmapper. For further detail \url{http://owlcollab.github.io/oboformat/doc/obo-syntax.html}. Default: EXACT
\describe{
\item{EXACT}{}
\item{ALL}{}
}}

\item{taxID}{the taxonomy identifier of the organism when the dictionary type is ENTREZ or TARGET. If 0 all the taxonomies will be included in the new dictionary.}

\item{.Object}{instance of class CMdictionary}

\item{outputDir}{the directory where the XML conceptmapper dictionary will be stored. Defaults to the tmp system's directory}
}
\value{
An object of type CMdictionary that can be used to annotate text with the \code{EntityFinder}.

An object of type CMdictionary that can be used to annotate text with the \code{EntityFinder}.

the list of dictionary types available

list of details about the dictionary
}
\description{
CMdictionary is a class that wraps a Conceptmapper ccp-nlp Java dictionary. Its methods allow the creation of a dictionary from OBO ontologies in OBO or OWL format. Different options to build the dictionary are available.

This function builds a dictionary for Conceptmapper.

Method dictTypes

Method dictInfo

Method buildDictionary

This method builds a dictionary for Conceptmapper.

This method shows a lis of the pre-defined conceptmapper dictionary types

This method shows the list of details of the conceptmapper dictionary
}
\details{
The following methods can be applied to CMdictionary

\code{\link{dictTypes}} \cr
\code{\link{buildDictionary}} \cr
\code{\link{dictInfo}} \cr
}
\section{Slots}{

\describe{
\item{\code{dict_location}}{The path of the created dictionary file}

\item{\code{dictRef}}{Reference to the java object representing the dictionary}

\item{\code{dictInfo}}{Information about how dictionary has been created. It is a list with the following fields
\itemize{
\item{Dictionary Type:{The type of dictionary}
 \itemize{
      \item{OBO}{A dictionary that has been created by An OBO file}
      \item{ENTREZ}{Entrez genes dictionary}
      \item{TARGET}{Entrez genes dictionary, Histone marks and Histone modifications}
      \item{CMDICT}{A previously created dictionary file in the Conceptmapper XML format}
 }
}

\item{SynonymType: {The type of synonyms to consider when building the dictionary for Conceptmapper. For further detail \url{http://owlcollab.github.io/oboformat/doc/obo-syntax.html}}
\itemize{
\item{EXACT}{}
\item{BROAD}{}
\item{NARROW}{}
\item{RELATED}{}
\item{ALL}{}
}
}

\item{dictSource: {The OBO/OWL dictionary file to convert to a Conceptmapper dictionary in case the type is OBO. The XML file in case the type is CMDICT}}

\item{taxID The NCBI taxon identifier for species to create the Entrez gene dictionary (e.g 9606 for Mus musculus)}
}}
}}

\examples{
dict <- new('CMdictionary')

obo <- system.file('extdata', 'sample.cs.obo', package='OnassisJavaLibs')
sample_dict <- CMdictionary(inputFileOrDb=obo, outputdir=getwd(), synonymType='ALL')

dictionary <- new('CMdictionary')
\dontrun{
#' ##This might take some time to download the dictionary
dict <- buildDictionary(dictionary, dictType = 'TARGET', inputFileOrDb='org.Hs.eg.db')

dict_file <- system.file('extdata', 'sample.cs.obo', package='OnassisJavaLibs')
dictionary <- buildDictionary(dictionary, dictType='OBO', inputFileOrDb=dict_file)
}
dictionary <- new('CMdictionary')
dictTypes(dictionary)
dictionary <- new('CMdictionary')
dictInfo(dictionary)
}
