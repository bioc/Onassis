% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/Onassis-methods.R
\docType{methods}
\name{annotate}
\alias{annotate}
\alias{annotate,data.frame,character,character-method}
\title{\code{annotate}}
\usage{
annotate(input = NA, dictType = NA, dictionary = NA, ...)

\S4method{annotate}{data.frame,character,character}(input,
  dictType = "OBO", dictionary = NA, dictoutdir = getwd(),
  d_synonymtype = "EXACT", taxID = 0, annot_out = getwd(),
  paramValueIndex = NA, SearchStrategy = "CONTIGUOUS_MATCH",
  CaseMatch = "CASE_INSENSITIVE", Stemmer = "NONE",
  StopWords = "NONE", OrderIndependentLookup = "ON",
  FindAllMatches = "YES", e_synonymtype = "ALL",
  multipleDocs = FALSE, disease = FALSE)
}
\arguments{
\item{input}{A data frame where the first column is the ID of the sample or document to annotate}

\item{dictType}{the type of input dictionary
\describe{
\item{OBO}{A dictionary that has been created by An OBO file}
\item{ENTREZ}{Entrez genes dictionary}
\item{TARGET}{Entrez genes dictionary, Histone marks and Histone modifications}
\item{CMDICT}{A previously created dictionary file in the Conceptmapper XML format}
}}

\item{dictionary}{The local OBO/OWL ontology to be converted into an XML Conceptmapper dictionary or the URL to download the file. If NA is passed and the \code{dicType} parameter is not the default OBO then the method tries to download the corresponding dictionary from the available repositories. For ENTREZ and TARGET dictionary types a file named gene_info.gz can be automatically downloaded from \url{ftp://ncbi.nlm.nih.gov/gene/data/gene_info.gz} if its path is not provided by the user in this parameter. Alternatively an annotation package of the type \code{Org.xx.eg.db} from Bioconductor can be used. In this case the gene identifiers and their alternative names will be retrieved from the annotation database without the need of downloading a gene_info file.}

\item{...}{Optional parameters}

\item{dictoutdir}{Optional parameter to specify the location where the Conceptmapper dictionary file will be stored. Defaults to current working directory.}

\item{d_synonymtype}{Optional parameter to specify the type of synonyms to consider when building the dictionary for Conceptmapper. For further detail \url{http://owlcollab.github.io/oboformat/doc/obo-syntax.html}. Default: EXACT
\describe{
\item{EXACT}{}
\item{ALL}{}
}}

\item{taxID}{the taxonomy identifier of the organism when the \code{dictType} = 'ENTREZ' or 'TARGET' and the \code{dictionary} parameter refers to a gene_info.gz file. If 0 all the taxonomies will be included in the new dictionary.}

\item{annot_out}{The path of the output directory where Conceptmapper annotation files will be stored}

\item{paramValueIndex}{An integer value to index the 576 parameter combinations}

\item{SearchStrategy}{The matching strategy for finding concepts in the input text
\itemize{
\item{CONTIGUOUS_MATCH}{Longets match of contiguous tokens within enclosing span}
\item{SKIP_ANY_MATCH}{Longest match of not-necessarily contiguous tokens}
\item{SKIP_ANY_MATCH_ALLOW_OVERLAP}{Longest match of not-necessarily contiguous tokens, overlapping matches are allowed}
}}

\item{CaseMatch}{\itemize{
\item{CASE_IGNORE}{Fold everything to lowercase for matching}
\item{CASE_INSENSITIVE}{Fold only tokens with initial caps to lowercase}
\item{CASE_FOLD_DIGITS}{Fold all (and only) tokens with a digit}
\item{CASE_SENSITIVE}{Perform no case folding}
}}

\item{Stemmer}{\itemize{
\item BIOLEMMATIZER {A stemmer specific for biomedical literature}
\item PORTER {A stemmer that removes the commoner morphological and inflexional endings from words in English}
\item NONE {No word stemming}
}}

\item{StopWords}{\itemize{
\item PUBMED {A list of stop words obtained analyzing Pubmed papers}
\item NONE {No stop words }
}}

\item{OrderIndependentLookup}{\itemize{
\item ON {Ordering within span is ignored (i.e. 'Breast cancer' would equal 'Cancer breast') }
\item OFF {Ordering is taken into consideration}
}}

\item{FindAllMatches}{\itemize{
\item YES {All the matches within the span are found }
\item NO {Only the longest match within the span will be returned}
}}

\item{e_synonymtype}{The type of synoyms for the EntityFinder
\itemize{
\item EXACT_ONLY {Only exact synonyms are considered }
\item ALL {All synonym types are included}
}}

\item{multipleDocs}{TRUE when multiple documents are loaded from a single file with each row representing a document. The file should have two columns. The first for the unique document identifier and the second for the textual descriptions}

\item{disease}{A logical value set to TRUE if the annotation requires the 'Healthy' condition to be found.}
}
\value{
instance of class \code{\link{Onassis-class}} with annotated entities
}
\description{
This method annotates the entities contained in a data frame with the concepts from a specific dictionary.
}
\examples{
geo_chip <- readRDS(system.file('extdata', 'vignette_data',
'GEO_human_chip.rds', package='Onassis'))

obo <- system.file('extdata', 'sample.cs.obo', package='OnassisJavaLibs')
onassis_results <- annotate(geo_chip, 'OBO', dictionary=obo)
entities <- entities(onassis_results)
entities <- entities[sample(nrow(entities), 30),]
}
