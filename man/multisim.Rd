% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/similarity-methods.R
\docType{methods}
\name{multisim}
\alias{multisim}
\alias{multisim,list,list,character,character-method}
\title{Method multisim}
\usage{
multisim(similarities, annotations, sample1, sample2, aggregating_function)

\S4method{multisim}{list,list,character,character}(similarities, annotations,
  sample1, sample2, aggregating_function = "mean")
}
\arguments{
\item{similarities}{a list of Similarity instances, one for each ontology used to annotate the data}

\item{annotations}{a list of annotated data frames obtained using annotateDF or findEntities, one for each ontology}

\item{sample1}{A sample ID with its annotations available in a data frame}

\item{sample2}{A sample ID with its annotations available in a data frame}

\item{aggregating_function}{A function used to aggregate the single similarities obtained from each ontology annotation. The function should be applied to a numeric vector. The default value is "mean"}
}
\value{
The aggregate semantic similarity between the samples sample1 and sample2
}
\description{
Method multisim

This method computes the semantic similarity between samples annotated with different ontology terms from different ontologies
}
\examples{
ef <- new('EntityFinder')

opts <- new('CMoptions')

dict_file <-  file.path(getwd(), 'cmDict-BrendaTissue.xml')
 if(!file.exists(dict_file))
   download.file('https://sourceforge.net/projects/onassis/files/cmDict-BrendaTissue.xml',
    destfile=file.path(getwd(), 'cmDict-BrendaTissue.xml'))

brenda <- findEntities(ef, system.file('extdata', 'testsamples',
package='Onassis'), multipleDocs=FALSE, configOpt=opts,
 cmDict=file.path(getwd(), 'cmDict-BrendaTissue.xml'))

dict_file <-  file.path(getwd(), 'cmDict-doid.xml')
 if(!file.exists(dict_file))
   download.file('https://sourceforge.net/projects/onassis/files/cmDict-doid.xml',
    destfile=file.path(getwd(), 'cmDict-doid.xml'))

disease <- findEntities(ef, system.file('extdata', 'testsamples', package='Onassis'),
 multipleDocs=FALSE, configOpt=opts,
  cmDict=file.path(getwd(), 'cmDict-doid.xml'))

dict_file <-  file.path(getwd(), 'BrendaTissue.obo')
 if(!file.exists(dict_file))
   download.file('https://sourceforge.net/projects/onassis/files/BrendaTissue.obo',
    destfile=file.path(getwd(), 'BrendaTissue.obo'))

brenda_sim <- new('Similarity')
ontology(brenda_sim) <- file.path(getwd(), 'BrendaTissue.obo')

dict_file <-  file.path(getwd(), 'doid.obo')
 if(!file.exists(dict_file))
   download.file('https://sourceforge.net/projects/onassis/files/doid.obo',
    destfile=file.path(getwd(), 'doid.obo'))
disease_sim <- new('Similarity')
ontology(disease_sim) <- file.path(getwd(), 'doid.obo')

pairwiseConfig(brenda_sim) <- showOpts(brenda_sim)$pairwiseMeasures[9]
pairwiseConfig(disease_sim) <- showOpts(disease_sim)$pairwiseMeasures[9]
groupwiseConfig(brenda_sim) <- showOpts(brenda_sim)$groupwiseMeasures[3]
groupwiseConfig(disease_sim) <- showOpts(disease_sim)$groupwiseMeasures[3]
similarity <- multisim(list(brenda_sim, disease_sim),
list(brenda, disease), brenda[1,1], brenda[3,1], 'mean')
}
